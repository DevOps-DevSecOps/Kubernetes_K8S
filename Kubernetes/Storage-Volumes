[awsElasticBlockStore]
An awsElasticBlockStore volume mounts an Amazon Web Services (AWS) EBS volume into pod.
It is erased when a pod is removed, the contents of an EBS volume are persisted and the volume is unmounted.
The EBS volume can be pre-populated with data, and that data can be shared between pods.
It must create an EBS volume by using an command (aws ec2 create-volume) OR the AWS API before can use it.
There are some restrictions when using an awsElasticBlockStore volume:-
● The nodes on which pods are running must be AWS EC2 instances.
● Those instances need to be in the same region and availability zone as the EBS volume.
● EBS only supports a single EC2 instance mounting a volume.

[emptyDir]
It creates empty directory first created when a Pod is assigned to a node.
It stays as long as pod is running.
Once pod is removed from a node, emptyDir is deleted forever. (OR) When a Pod is removed from a node for any reason, the data in the emptyDir is deleted permanently.
It's an temporary space.   
The emptyDir volume is initially empty. 
All containers in the Pod can read and write the same files in the emptyDir volume, though that volume can be mounted at the same or different paths in each container.
An emptyDir volume recreates when containers restart or crash. The data in this volume is deleted and lost when the pod is removed from the node, crashes, or dies.

[hostPath]
A hostPath volume mounts a file or directory from the host node's filesystem into Pod.
The data is persistence even after the pod is terminated.
The "type: Directory" will create the directory inside with out any parent directory.
The "type: DirectoryOrCreate" will create the parent directory.
The "type: File" will a file must exist at the given path.
The "type: FileOrCreate" will does not create the parent directory of the file. If the parent directory of the mounted file does not exist, the pod fails to start.
